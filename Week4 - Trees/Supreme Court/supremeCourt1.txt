
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> stevens = read.csv("stevens.csv")
> str(stevens)
'data.frame':   566 obs. of  9 variables:
 $ Docket    : Factor w/ 566 levels "00-1011","00-1045",..: 63 69 70 145 97 181 242 289 334 436 ...
 $ Term      : int  1994 1994 1994 1994 1995 1995 1996 1997 1997 1999 ...
 $ Circuit   : Factor w/ 13 levels "10th","11th",..: 4 11 7 3 9 11 13 11 12 2 ...
 $ Issue     : Factor w/ 11 levels "Attorneys","CivilRights",..: 5 5 5 5 9 5 5 5 5 3 ...
 $ Petitioner: Factor w/ 12 levels "AMERICAN.INDIAN",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ Respondent: Factor w/ 12 levels "AMERICAN.INDIAN",..: 2 2 2 2 2 2 2 2 2 2 ...
 $ LowerCourt: Factor w/ 2 levels "conser","liberal": 2 2 2 1 1 1 1 1 1 1 ...
 $ Unconst   : int  0 0 0 0 0 1 0 1 0 0 ...
 $ Reverse   : int  1 1 1 1 1 0 1 1 1 1 ...
> library(caTools)
> set.seed(3000)
> spl = sample.split(stevens$Reverse, SplitRatio=0.7)
> Train = subset(stevens, spl==TRUE)
> Test = subset(stevens, spl==FALSE)
> install.packages("rpart")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
--- Please select a CRAN mirror for use in this session ---
trying URL 'https://mirrors.tongji.edu.cn/CRAN/bin/windows/contrib/3.6/rpart_4.1-15.zip'
Content type 'application/zip' length 769649 bytes (751 KB)
downloaded 751 KB

package ‘rpart’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\Rtmp0GRhM4\downloaded_packages
> library("rpart")
> install.packages("rpart.plot")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
trying URL 'https://mirrors.tongji.edu.cn/CRAN/bin/windows/contrib/3.6/rpart.plot_3.0.8.zip'
Content type 'application/zip' length 1077691 bytes (1.0 MB)
downloaded 1.0 MB

package ‘rpart.plot’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\Rtmp0GRhM4\downloaded_packages
> library("rpart.plot")
> StevensTree = rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, method="class", minbuxket=25)
Error in rpart(Reverse ~ Circuit + Issue + Petitioner + Respondent + LowerCourt +  : 
  Argument minbuxket not matched
> StevensTree = rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, method="class", minbucket=25)
> prp(StevensTree)
> PredictCART = predict(StevensTree, newdata=Test, type="class")
> table(Test$Reverse, PredictCART)
   PredictCART
     0  1
  0 41 36
  1 22 71
> (41+71)/(41+36+22+71)
[1] 0.6588235
> library(ROCR)
Loading required package: gplots

Attaching package: ‘gplots’

The following object is masked from ‘package:stats’:

    lowess

> PredictROC = predict(StevensTree, newdata=Test)
> PredictROC
            0         1
1   0.3035714 0.6964286
3   0.3035714 0.6964286
4   0.4000000 0.6000000
6   0.4000000 0.6000000
8   0.4000000 0.6000000
21  0.3035714 0.6964286
32  0.5517241 0.4482759
36  0.5517241 0.4482759
40  0.3035714 0.6964286
42  0.5517241 0.4482759
46  0.5517241 0.4482759
47  0.4000000 0.6000000
53  0.5517241 0.4482759
55  0.3035714 0.6964286
59  0.1842105 0.8157895
60  0.4000000 0.6000000
66  0.4000000 0.6000000
67  0.4000000 0.6000000
68  0.1842105 0.8157895
72  0.3035714 0.6964286
79  0.3035714 0.6964286
80  0.5517241 0.4482759
87  0.7600000 0.2400000
88  0.1842105 0.8157895
92  0.7910448 0.2089552
95  0.7910448 0.2089552
102 0.7910448 0.2089552
106 0.7910448 0.2089552
110 0.7910448 0.2089552
112 0.7910448 0.2089552
114 0.7910448 0.2089552
125 0.7910448 0.2089552
130 0.7910448 0.2089552
134 0.7910448 0.2089552
138 0.7910448 0.2089552
145 0.7910448 0.2089552
146 0.7910448 0.2089552
148 0.3035714 0.6964286
149 0.3035714 0.6964286
152 0.3035714 0.6964286
154 0.5517241 0.4482759
161 0.7878788 0.2121212
164 0.4000000 0.6000000
167 0.7878788 0.2121212
169 0.3035714 0.6964286
171 0.7600000 0.2400000
175 0.5517241 0.4482759
176 0.0754717 0.9245283
177 0.0754717 0.9245283
178 0.0754717 0.9245283
180 0.0754717 0.9245283
187 0.0754717 0.9245283
188 0.7878788 0.2121212
190 0.0754717 0.9245283
192 0.0754717 0.9245283
196 0.0754717 0.9245283
197 0.3035714 0.6964286
208 0.3035714 0.6964286
210 0.0754717 0.9245283
216 0.7910448 0.2089552
218 0.7910448 0.2089552
220 0.0754717 0.9245283
224 0.4000000 0.6000000
226 0.7600000 0.2400000
227 0.4000000 0.6000000
228 0.7878788 0.2121212
235 0.3035714 0.6964286
239 0.7878788 0.2121212
242 0.7600000 0.2400000
244 0.7600000 0.2400000
247 0.4000000 0.6000000
255 0.3035714 0.6964286
260 0.5517241 0.4482759
261 0.7600000 0.2400000
264 0.3035714 0.6964286
265 0.3035714 0.6964286
268 0.3035714 0.6964286
272 0.5517241 0.4482759
273 0.3035714 0.6964286
274 0.5517241 0.4482759
275 0.3035714 0.6964286
282 0.4000000 0.6000000
286 0.7878788 0.2121212
291 0.4000000 0.6000000
294 0.1842105 0.8157895
305 0.4000000 0.6000000
306 0.3035714 0.6964286
308 0.7878788 0.2121212
311 0.7878788 0.2121212
313 0.7878788 0.2121212
314 0.7878788 0.2121212
315 0.7878788 0.2121212
317 0.7878788 0.2121212
320 0.7878788 0.2121212
321 0.7878788 0.2121212
323 0.4000000 0.6000000
331 0.3035714 0.6964286
335 0.3035714 0.6964286
338 0.7600000 0.2400000
341 0.5517241 0.4482759
345 0.5517241 0.4482759
346 0.3035714 0.6964286
350 0.3035714 0.6964286
352 0.3035714 0.6964286
353 0.1842105 0.8157895
355 0.3035714 0.6964286
356 0.1842105 0.8157895
358 0.3035714 0.6964286
359 0.3035714 0.6964286
360 0.4000000 0.6000000
361 0.4000000 0.6000000
362 0.5517241 0.4482759
364 0.3035714 0.6964286
368 0.3035714 0.6964286
381 0.4000000 0.6000000
382 0.1842105 0.8157895
384 0.3035714 0.6964286
387 0.1842105 0.8157895
389 0.3035714 0.6964286
390 0.4000000 0.6000000
394 0.3035714 0.6964286
400 0.7878788 0.2121212
402 0.4000000 0.6000000
405 0.7878788 0.2121212
408 0.3035714 0.6964286
410 0.3035714 0.6964286
416 0.4000000 0.6000000
422 0.7600000 0.2400000
432 0.0754717 0.9245283
434 0.7910448 0.2089552
436 0.0754717 0.9245283
441 0.7910448 0.2089552
444 0.0754717 0.9245283
448 0.0754717 0.9245283
450 0.0754717 0.9245283
451 0.0754717 0.9245283
452 0.7910448 0.2089552
454 0.0754717 0.9245283
456 0.0754717 0.9245283
459 0.0754717 0.9245283
462 0.0754717 0.9245283
464 0.0754717 0.9245283
467 0.0754717 0.9245283
468 0.0754717 0.9245283
470 0.0754717 0.9245283
473 0.0754717 0.9245283
476 0.0754717 0.9245283
478 0.0754717 0.9245283
480 0.0754717 0.9245283
482 0.0754717 0.9245283
483 0.0754717 0.9245283
484 0.0754717 0.9245283
494 0.7910448 0.2089552
498 0.1842105 0.8157895
504 0.4000000 0.6000000
509 0.4000000 0.6000000
521 0.7600000 0.2400000
527 0.4000000 0.6000000
531 0.4000000 0.6000000
535 0.4000000 0.6000000
538 0.7600000 0.2400000
539 0.1842105 0.8157895
540 0.4000000 0.6000000
543 0.7600000 0.2400000
545 0.4000000 0.6000000
546 0.7910448 0.2089552
551 0.7910448 0.2089552
552 0.7910448 0.2089552
556 0.4000000 0.6000000
558 0.1842105 0.8157895
> pred = prediction(PredictROC[,2], Test$Reverse)
> pref = performance(pred,"tpr","fpr")
> plot(perf)
Error in plot(perf) : object 'perf' not found
> perf = performance(pred,"tpr","fpr")
> plot(perf)
> PredictCART
  1   3   4   6   8  21  32  36  40  42  46  47  53  55  59  60  66  67 
  1   1   1   1   1   1   0   0   1   0   0   1   0   1   1   1   1   1 
 68  72  79  80  87  88  92  95 102 106 110 112 114 125 130 134 138 145 
  1   1   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0   0 
146 148 149 152 154 161 164 167 169 171 175 176 177 178 180 187 188 190 
  0   1   1   1   0   0   1   0   1   0   0   1   1   1   1   1   0   1 
192 196 197 208 210 216 218 220 224 226 227 228 235 239 242 244 247 255 
  1   1   1   1   1   0   0   1   1   0   1   0   1   0   0   0   1   1 
260 261 264 265 268 272 273 274 275 282 286 291 294 305 306 308 311 313 
  0   0   1   1   1   0   1   0   1   1   0   1   1   1   1   0   0   0 
314 315 317 320 321 323 331 335 338 341 345 346 350 352 353 355 356 358 
  0   0   0   0   0   1   1   1   0   0   0   1   1   1   1   1   1   1 
359 360 361 362 364 368 381 382 384 387 389 390 394 400 402 405 408 410 
  1   1   1   0   1   1   1   1   1   1   1   1   1   0   1   0   1   1 
416 422 432 434 436 441 444 448 450 451 452 454 456 459 462 464 467 468 
  1   0   1   0   1   0   1   1   1   1   0   1   1   1   1   1   1   1 
470 473 476 478 480 482 483 484 494 498 504 509 521 527 531 535 538 539 
  1   1   1   1   1   1   1   1   0   1   1   1   0   1   1   1   0   1 
540 543 545 546 551 552 556 558 
  1   0   1   0   0   0   1   1 
Levels: 0 1
> as.numeric(performance(pred, "auc")@y.values)
[1] 0.6927105
> StevensTree2 = rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, method="class", minbucket=5)
> prp(StevensTree2)
> StevensTree3 = rpart(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, method="class", minbucket=100)
> prp(StevensTree3)
> prp(StevensTree3)
> install.packages("randomForest")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
trying URL 'https://mirrors.tongji.edu.cn/CRAN/bin/windows/contrib/3.6/randomForest_4.6-14.zip'
Content type 'application/zip' length 250157 bytes (244 KB)
downloaded 244 KB

package ‘randomForest’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\Rtmp0GRhM4\downloaded_packages
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> StevensForest = randomForest(Reverse~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, nodesize=25, ntree=200)
Error in eval(predvars, data, env) : object 'Reverse' not found
> StevensForest = randomForest(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, nodesize=25, ntree=200)
Error in eval(predvars, data, env) : object 'Reverse' not found
> StevensForest = randomForest(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, nodesize=25, ntree=200)
Warning message:
In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
> Train$Reverse = as.factor(Train$Reverse)
> Test$Reverse = as.factor(Test$Reverse)
> StevensForest = randomForest(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, nodesize=25, ntree=200)
> PredictForest = predict(StevensForest, newdata=Test)
> table(Test$Reverse, PredictForest)
   PredictForest
     0  1
  0 43 34
  1 20 73
> set.seed(100)
> StevensForest2 = randomForest(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, nodesize=25, ntree=200)
> PredictForest2 = predict(StevensForest2, newdata=Test)
> table(Test$Reverse, PredictForest2)
   PredictForest2
     0  1
  0 46 31
  1 19 74
> (46+74)/(46+74+31+19)
[1] 0.7058824
> set.seed(200)
> StevensForest3 = randomForest(Reverse ~ Circuit+Issue+Petitioner+Respondent+LowerCourt+Unconst, data=Train, nodesize=25, ntree=200)
> PredictForest3 = predict(StevensForest3, newdata=Test)
> table(Test$Reverse, PredictForest3)
   PredictForest3
     0  1
  0 43 34
  1 18 75
> (43+75)/(43+75+34+18)
[1] 0.6941176
> 
