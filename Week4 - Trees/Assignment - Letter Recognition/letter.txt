> letters = read.csv("letters_ABPR.csv")
> letters$isB = as.factor(letters$letter == "B")
> library(caTools)
> set.seed(1000)
> split = sample.aplit(letters$isB, SplitRatio=0.5) 
Error in sample.aplit(letters$isB, SplitRatio = 0.5) : 
  could not find function "sample.aplit"
> split = sample.split(letters$isB, SplitRatio=0.5) 
> train = subset(letters, split==TRUE)
> test = subset(letters, split==FALSE)
> table(letters$isB)/nrows(letters)
Error in nrows(letters) : could not find function "nrows"
> table(letters$isB)/nrows(letters)
Error in nrows(letters) : could not find function "nrows"
> table(letters$isB)/nrow(letters)

   FALSE     TRUE 
0.754172 0.245828 
> library(rpart)
> library(rpart.plot)
> CARTb = rpart(isB ~ . - letter, data=train, method="class")
> predictCARTb = predict(CARTb, newdata=test, type="class")
> table(test$isB, predictCARTb)
       predictCARTb
        FALSE TRUE
  FALSE  1118   57
  TRUE     43  340
> (1118+340)/(1118+340+43+57)
[1] 0.9358151
> library(randomForest)
> RFb = randomForest(isB ~ . - letter, data=train, method="class")
> RFb = randomForest(isB ~ . - letter, data=train)
> predictRFb = predict(RFb, newdata=test)
> table(test$isB, predictRFb)
       predictRFb
        FALSE TRUE
  FALSE  1165   10
  TRUE      9  374
> (1165+374)/(1165+374+19)
[1] 0.9878049
> letters$letter = as.factor( letters$letter )
> set.seed(2000)
> split = sample.aplit(letters$letter, SplitRatio=0.5) 
Error in sample.aplit(letters$letter, SplitRatio = 0.5) : 
  could not find function "sample.aplit"
> split = sample.split(letters$letter, SplitRatio=0.5) 
> train = subset(letters, split==TRUE)
> test = subset(letters, split==FALSE)
> table(letters$letter)

  A   B   P   R 
789 766 803 758 
> table(letters$letter)/nrow(letters)

        A         B         P         R 
0.2532092 0.2458280 0.2577022 0.2432606 
> CARTall = rpart(isB ~ . - isB, data=train, method="class")
> predictCARTall = predict(CARTall, newdata=test, type="class")
> CARTall = rpart(letter ~ . - isB, data=train, method="class")
> predictCARTall = predict(CARTall, newdata=test, type="class")
> table(test$letter, predictCARTall)
   predictCARTall
      A   B   P   R
  A 348   4   0  43
  B   8 318  12  45
  P   2  21 363  15
  R  10  24   5 340
> nrow(predictCARTall)
NULL
> size(predictCARTall)
Error in size(predictCARTall) : could not find function "size"
> length(predictCARTall)
[1] 1558
> (348+318+363+340)/length(predictCARTall)
[1] 0.8786906
> set.seed(1000)
> RFall = randomForest(letter ~ . - isB, data=train)
> predictRFall = predict(RFall, newdata=test)
> table(test$letter, predictRFall)
   predictRFall
      A   B   P   R
  A 391   0   3   1
  B   0 380   1   2
  P   0   6 394   1
  R   3  14   0 362
> (391+380+394+362)/length(predictRFall)
[1] 0.9801027
> 
