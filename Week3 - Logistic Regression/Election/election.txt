> polling = read.csv("PollingData.csv")
> str(polling)
'data.frame':   145 obs. of  7 variables:
 $ State     : Factor w/ 50 levels "Alabama","Alaska",..: 1 1 2 2 3 3 3 4 4 4 ...
 $ Year      : int  2004 2008 2004 2008 2004 2008 2012 2004 2008 2012 ...
 $ Rasmussen : int  11 21 NA 16 5 5 8 7 10 NA ...
 $ SurveyUSA : int  18 25 NA NA 15 NA NA 5 NA NA ...
 $ DiffCount : int  5 5 1 6 8 9 4 8 5 2 ...
 $ PropR     : num  1 1 1 1 1 ...
 $ Republican: int  1 1 1 1 1 1 1 1 1 1 ...
> table(polling$Year)

2004 2008 2012 
  50   50   45 
> summary(polling)
         State          Year        Rasmussen          SurveyUSA       
 Arizona    :  3   Min.   :2004   Min.   :-41.0000   Min.   :-33.0000  
 Arkansas   :  3   1st Qu.:2004   1st Qu.: -8.0000   1st Qu.:-11.7500  
 California :  3   Median :2008   Median :  1.0000   Median : -2.0000  
 Colorado   :  3   Mean   :2008   Mean   :  0.0404   Mean   : -0.8243  
 Connecticut:  3   3rd Qu.:2012   3rd Qu.:  8.5000   3rd Qu.:  8.0000  
 Florida    :  3   Max.   :2012   Max.   : 39.0000   Max.   : 30.0000  
 (Other)    :127                  NA's   :46         NA's   :71        
   DiffCount           PropR          Republican    
 Min.   :-19.000   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: -6.000   1st Qu.:0.0000   1st Qu.:0.0000  
 Median :  1.000   Median :0.6250   Median :1.0000  
 Mean   : -1.269   Mean   :0.5259   Mean   :0.5103  
 3rd Qu.:  4.000   3rd Qu.:1.0000   3rd Qu.:1.0000  
 Max.   : 11.000   Max.   :1.0000   Max.   :1.0000  
                                                    
> install.packages("mice")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
--- Please select a CRAN mirror for use in this session ---
also installing the dependencies ‘utf8’, ‘plyr’, ‘cli’, ‘crayon’, ‘fansi’, ‘pillar’, ‘digest’, ‘backports’, ‘generics’, ‘purrr’, ‘reshape2’, ‘stringr’, ‘tibble’, ‘ellipsis’, ‘assertthat’, ‘glue’, ‘magrittr’, ‘pkgconfig’, ‘R6’, ‘rlang’, ‘tidyselect’, ‘BH’, ‘plogr’, ‘stringi’, ‘vctrs’, ‘lifecycle’, ‘broom’, ‘dplyr’, ‘tidyr’, ‘Rcpp’


  There is a binary version available but the source version is later:
     binary source needs_compilation
Rcpp  1.0.3  1.0.4              TRUE

  Binaries will be installed
.
.
package ‘plyr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\RtmpCsYQqu\downloaded_packages
> library(mice)

Attaching package: ‘mice’

The following objects are masked from ‘package:base’:

    cbind, rbind

> simple = polling[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount")]
> summary(simple)
   Rasmussen          SurveyUSA            PropR          DiffCount      
 Min.   :-41.0000   Min.   :-33.0000   Min.   :0.0000   Min.   :-19.000  
 1st Qu.: -8.0000   1st Qu.:-11.7500   1st Qu.:0.0000   1st Qu.: -6.000  
 Median :  1.0000   Median : -2.0000   Median :0.6250   Median :  1.000  
 Mean   :  0.0404   Mean   : -0.8243   Mean   :0.5259   Mean   : -1.269  
 3rd Qu.:  8.5000   3rd Qu.:  8.0000   3rd Qu.:1.0000   3rd Qu.:  4.000  
 Max.   : 39.0000   Max.   : 30.0000   Max.   :1.0000   Max.   : 11.000  
 NA's   :46         NA's   :71                                           
> set.seed(144)
> imputed = complete(mice(simple))

 iter imp variable
  1   1  Rasmussen  SurveyUSA
  1   2  Rasmussen  SurveyUSA
  1   3  Rasmussen  SurveyUSA
  1   4  Rasmussen  SurveyUSA
  1   5  Rasmussen  SurveyUSA
  2   1  Rasmussen  SurveyUSA
  2   2  Rasmussen  SurveyUSA
  2   3  Rasmussen  SurveyUSA
  2   4  Rasmussen  SurveyUSA
  2   5  Rasmussen  SurveyUSA
  3   1  Rasmussen  SurveyUSA
  3   2  Rasmussen  SurveyUSA
  3   3  Rasmussen  SurveyUSA
  3   4  Rasmussen  SurveyUSA
  3   5  Rasmussen  SurveyUSA
  4   1  Rasmussen  SurveyUSA
  4   2  Rasmussen  SurveyUSA
  4   3  Rasmussen  SurveyUSA
  4   4  Rasmussen  SurveyUSA
  4   5  Rasmussen  SurveyUSA
  5   1  Rasmussen  SurveyUSA
  5   2  Rasmussen  SurveyUSA
  5   3  Rasmussen  SurveyUSA
  5   4  Rasmussen  SurveyUSA
  5   5  Rasmussen  SurveyUSA
> summary(imputed)
   Rasmussen         SurveyUSA           PropR          DiffCount      
 Min.   :-41.000   Min.   :-33.000   Min.   :0.0000   Min.   :-19.000  
 1st Qu.: -8.000   1st Qu.:-11.000   1st Qu.:0.0000   1st Qu.: -6.000  
 Median :  3.000   Median :  1.000   Median :0.6250   Median :  1.000  
 Mean   :  2.786   Mean   :  2.014   Mean   :0.5259   Mean   : -1.269  
 3rd Qu.: 13.000   3rd Qu.: 18.000   3rd Qu.:1.0000   3rd Qu.:  4.000  
 Max.   : 39.000   Max.   : 30.000   Max.   :1.0000   Max.   : 11.000  
> polling$Rasmussen = imputed$Rasmussen
> polling$SurveyUSA = imputed$SurveyUSA
> summary(polling)
         State          Year        Rasmussen         SurveyUSA      
 Arizona    :  3   Min.   :2004   Min.   :-41.000   Min.   :-33.000  
 Arkansas   :  3   1st Qu.:2004   1st Qu.: -8.000   1st Qu.:-11.000  
 California :  3   Median :2008   Median :  3.000   Median :  1.000  
 Colorado   :  3   Mean   :2008   Mean   :  2.786   Mean   :  2.014  
 Connecticut:  3   3rd Qu.:2012   3rd Qu.: 13.000   3rd Qu.: 18.000  
 Florida    :  3   Max.   :2012   Max.   : 39.000   Max.   : 30.000  
 (Other)    :127                                                     
   DiffCount           PropR          Republican    
 Min.   :-19.000   Min.   :0.0000   Min.   :0.0000  
 1st Qu.: -6.000   1st Qu.:0.0000   1st Qu.:0.0000  
 Median :  1.000   Median :0.6250   Median :1.0000  
 Mean   : -1.269   Mean   :0.5259   Mean   :0.5103  
 3rd Qu.:  4.000   3rd Qu.:1.0000   3rd Qu.:1.0000  
 Max.   : 11.000   Max.   :1.0000   Max.   :1.0000  
                                                    
> Train = subset(polling, Year == 2004 | Year == 2008)
> Test = subset(polling, Year == 2012)
> table(Train$Republican)

 0  1 
47 53 
> sign(20)
[1] 1
> sign(-10)
[1] -1
> sign(0)
[1] 0
> table(sign(Train$Rasmussen))

-1  0  1 
42  2 56 
> 
> table(Train$Republican, sign(Train$Rasmussen))
   
    -1  0  1
  0 42  1  4
  1  0  1 52
> cor(Train)
Error in cor(Train) : 'x' must be numeric
> cor(Train[c("Rasmussen", "SurveyUSA", "PropR", "DiffCount", "Republican")
+ 
+ ])
           Rasmussen SurveyUSA     PropR DiffCount Republican
Rasmussen  1.0000000 0.9127481 0.8356056 0.4926308  0.7908133
SurveyUSA  0.9127481 1.0000000 0.8869625 0.5695477  0.8418046
PropR      0.8356056 0.8869625 1.0000000 0.8273785  0.9484204
DiffCount  0.4926308 0.5695477 0.8273785 1.0000000  0.8092777
Republican 0.7908133 0.8418046 0.9484204 0.8092777  1.0000000
> mod1 = glm(Republican ~ PropR, data = Train, family = "binomial")
> summaey(mod1)
Error in summaey(mod1) : could not find function "summaey"
> summary(mod1)

Call:
glm(formula = Republican ~ PropR, family = "binomial", data = Train)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.22880  -0.06541   0.10260   0.10260   1.37392  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)   -6.146      1.977  -3.108 0.001882 ** 
PropR         11.390      3.153   3.613 0.000303 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 138.269  on 99  degrees of freedom
Residual deviance:  15.772  on 98  degrees of freedom
AIC: 19.772

Number of Fisher Scoring iterations: 8

> pred1 = predict(mod1, type="response")
> table(Train$Republican, pred1 >= 0.5)
   
    FALSE TRUE
  0    45    2
  1     2   51
> mod2 = glm(Republican ~ PropR+SurveyUSA+DiffCount, data = Train, family = "binomial")
Warning message:
glm.fit: fitted probabilities numerically 0 or 1 occurred 
> pred2 = predict(mod2, type="response")
> table(Train$Republican, pred2 >= 0.5)
   
    FALSE TRUE
  0    45    2
  1     1   52
> summary(mod2)

Call:
glm(formula = Republican ~ PropR + SurveyUSA + DiffCount, family = "binomial", 
    data = Train)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-1.75805  -0.00148   0.00153   0.03328   1.50256  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)
(Intercept)   6.0414     7.8795   0.767    0.443
PropR       -14.6227    16.8003  -0.870    0.384
SurveyUSA     0.5318     0.3926   1.355    0.176
DiffCount     1.7860     1.5018   1.189    0.234

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 138.2692  on 99  degrees of freedom
Residual deviance:   9.6492  on 96  degrees of freedom
AIC: 17.649

Number of Fisher Scoring iterations: 10

> mod2 = glm(Republican ~ SurveyUSA+DiffCount, data = Train, family = "binomial")
> pred2 = predict(mod2, type="response")
> table(Train$Republican, pred2 >= 0.5)
   
    FALSE TRUE
  0    45    2
  1     1   52
> summary(mod2)

Call:
glm(formula = Republican ~ SurveyUSA + DiffCount, family = "binomial", 
    data = Train)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-1.96335  -0.01207   0.01526   0.06363   1.50373  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)  -0.9991     1.2437  -0.803   0.4218  
SurveyUSA     0.2583     0.1454   1.777   0.0756 .
DiffCount     0.7388     0.4464   1.655   0.0979 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 138.269  on 99  degrees of freedom
Residual deviance:  10.749  on 97  degrees of freedom
AIC: 16.749

Number of Fisher Scoring iterations: 9

> table(Test$Republican, sign(Test$Rasmussen))
   
    -1  0  1
  0 18  2  4
  1  0  0 21
> TestPrediction = predict(mod2, newdata=Test, type="response")
> table(Test$Republican, Test$Prediction >= 0.5)
Error in table(Test$Republican, Test$Prediction >= 0.5) : 
  all arguments must have the same length
> str(TestPrediction)
 Named num [1:45] 9.97e-01 9.97e-01 1.18e-04 5.43e-03 3.47e-05 ...
 - attr(*, "names")= chr [1:45] "7" "10" "13" "16" ...
> summary(TestPrediction)
     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. 
0.0000007 0.0000754 0.0242218 0.4822131 0.9956038 0.9997783 
> nrow(TestPredicton)
Error in nrow(TestPredicton) : object 'TestPredicton' not found
> nrow(TestPrediction)
NULL
> TestPrediction
           7           10           13           16           19           24 
9.970730e-01 9.972765e-01 1.175794e-04 5.433488e-03 3.474013e-05 9.687435e-01 
          27           30           33           36           39           42 
9.824096e-01 1.039485e-03 9.943154e-01 1.900971e-04 9.638706e-01 2.257137e-02 
          45           48           51           54           57           60 
8.874094e-01 9.663043e-01 9.972765e-01 3.303490e-04 8.263427e-06 7.539882e-05 
          63           66           69           72           75           78 
1.328889e-05 5.340237e-04 9.973729e-01 9.987944e-01 9.915194e-01 9.978952e-01 
          81           84           87           90           93           96 
8.104841e-05 5.823558e-05 1.281734e-05 1.900971e-04 5.110761e-06 9.247643e-01 
          99          102          105          108          111          114 
9.989565e-01 7.437691e-07 9.994412e-01 3.133456e-03 2.482701e-05 1.668495e-05 
         117          120          123          126          129          134 
9.966012e-01 9.943154e-01 9.956038e-01 9.997783e-01 9.973729e-01 2.422180e-02 
         137          140          143 
2.683189e-05 9.943154e-01 5.823558e-05 
> Test$Republican
 [1] 1 1 0 0 0 0 1 0 1 0 1 0 1 1 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 1 1 0 1 0 0 0 1 1
[39] 1 1 1 0 0 1 0
> table(Test$Republican, TestPrediction >= 0.5)
   
    FALSE TRUE
  0    23    1
  1     0   21
> subset(Test, TestPrediction >= 0.5 & Republican == 0)
     State Year Rasmussen SurveyUSA DiffCount     PropR Republican
24 Florida 2012         2         0         6 0.6666667          0
> 
