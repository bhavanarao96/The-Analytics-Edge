
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> mvt = read.csv("mvt.csv", stringsAsFactors=FALSE)
> str(mvt)
'data.frame':   191641 obs. of  3 variables:
 $ Date     : chr  "12/31/12 23:15" "12/31/12 22:00" "12/31/12 22:00" "12/31/12 22:00" ...
 $ Latitude : num  41.8 41.9 42 41.8 41.8 ...
 $ Longitude: num  -87.6 -87.7 -87.8 -87.7 -87.6 ...
> mvt$Date = strptime(mvt$Date, format="%m/%d/%y %H:%M")
> mvt$Weekday = weekdays(mvt$Date)
> mvt$Hour = mvt$Date$hour
> str(mvt)
'data.frame':   191641 obs. of  5 variables:
 $ Date     : POSIXlt, format: "2012-12-31 23:15:00" "2012-12-31 22:00:00" ...
 $ Latitude : num  41.8 41.9 42 41.8 41.8 ...
 $ Longitude: num  -87.6 -87.7 -87.8 -87.7 -87.6 ...
 $ Weekday  : chr  "Monday" "Monday" "Monday" "Monday" ...
 $ Hour     : int  23 22 22 22 21 20 20 20 19 18 ...
> table(mvt$Weekday)

   Friday    Monday  Saturday    Sunday  Thursday   Tuesday Wednesday 
    29284     27397     27118     26316     27319     26791     27416 
> WeekdayCounts = as.dataframe(table(mvt$Weekday))
Error in as.dataframe(table(mvt$Weekday)) : 
  could not find function "as.dataframe"
> WeekdayCounts = as.data.frame(table(mvt$Weekday))
> str(WeekdayCounts)
'data.frame':   7 obs. of  2 variables:
 $ Var1: Factor w/ 7 levels "Friday","Monday",..: 1 2 3 4 5 6 7
 $ Freq: int  29284 27397 27118 26316 27319 26791 27416
> library(ggplot2)
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1))
> WeekdayCounts$Var1 = factor(WeekdayCounts$Var1, ordered=TRUE, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday")
+ )
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1))
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1)) + xlab("Day of the Week") + ylab("Total Motor Vehicle Thefts")
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1), linetype=2) + xlab("Day of the Week") + ylab("Total Motor Vehicle Thefts")
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1), alpha=0.3) + xlab("Day of the Week") + ylab("Total Motor Vehicle Thefts")
> ggplot(WeekdayCounts, aes(x=Var1, y=Freq)) + geom_line(aes(group=1)) + xlab("Day of the Week") + ylab("Total Motor Vehicle Thefts")
> table(mvt$Weekday, mvt$Hour)
           
               0    1    2    3    4    5    6    7    8    9   10   11   12
  Friday    1873  932  743  560  473  602  839 1203 1268 1286  938  822 1207
  Monday    1900  825  712  527  415  542  772 1123 1323 1235  971  737 1129
  Saturday  2050 1267  985  836  652  508  541  650  858 1039  946  789 1204
  Sunday    2028 1236 1019  838  607  461  478  483  615  864  884  787 1192
  Thursday  1856  816  696  508  400  534  799 1135 1298 1301  932  731 1093
  Tuesday   1691  777  603  464  414  520  845 1118 1175 1174  948  786 1108
  Wednesday 1814  790  619  469  396  561  862 1140 1329 1237  947  763 1225
           
              13   14   15   16   17   18   19   20   21   22   23
  Friday     857  937 1140 1165 1318 1623 1652 1736 1881 2308 1921
  Monday     824  958 1059 1136 1252 1518 1503 1622 1815 2009 1490
  Saturday   767  963 1086 1055 1084 1348 1390 1570 1702 2078 1750
  Sunday     789  959 1037 1083 1160 1389 1342 1706 1696 2079 1584
  Thursday   752  831 1044 1131 1258 1510 1537 1668 1776 2134 1579
  Tuesday    762  908 1071 1090 1274 1553 1496 1696 1816 2044 1458
  Wednesday  804  863 1075 1076 1289 1580 1507 1718 1748 2093 1511
> DayHourCounts = as.data.frame(table(mvt$Weekday, mvt$Hour))
> str(DayHourCounts)
'data.frame':   168 obs. of  3 variables:
 $ Var1: Factor w/ 7 levels "Friday","Monday",..: 1 2 3 4 5 6 7 1 2 3 ...
 $ Var2: Factor w/ 24 levels "0","1","2","3",..: 1 1 1 1 1 1 1 2 2 2 ...
 $ Freq: int  1873 1900 2050 2028 1856 1691 1814 932 825 1267 ...
> DayHourCounts$Hour = as.numeric(as.character(DayHourCounts$Var2))
> ggplot(DayHourCounts, aes(x=Hour, y=Freq)) + geom_line(aes(group=Var1))
> ggplot(DayHourCounts, aes(x=Hour, y=Freq)) + geom_line(aes(group=Var1, color = Var1))
> ggplot(DayHourCounts, aes(x=Hour, y=Freq)) + geom_line(aes(group=Var1, color = Var1),size=2)
> DayHourCounts$Var1 = factor(DayHourCounts$Var1, ordered=TRUE, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
+ )
> ggplot(DayHourCounts, aes(x=Hour, y=Var1)) + geom_tile(aes(fill=Freq))
> ggplot(DayHourCounts, aes(x=Hour, y=Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts") + theme(axis.title.y = element_blank())
> ggplot(DayHourCounts, aes(x=Hour, y=Var1)) + geom_tile(aes(fill=Freq)) + scale_fill_gradient(name="Total MV Thefts", low="white", high="red") + theme(axis.title.y = element_blank())
> install.packages(maps)
Error in install.packages(maps) : object 'maps' not found
> install.packages("maps")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
--- Please select a CRAN mirror for use in this session ---
trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/maps_3.3.0.zip'
Content type 'application/zip' length 3696314 bytes (3.5 MB)
downloaded 3.5 MB

package ‘maps’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\RtmpwfrSh6\downloaded_packages
> install.packages("ggmap")
Installing package into ‘C:/Users/ASUS/AppData/Roaming/SPB_16.6/R/win-library/3.6’
(as ‘lib’ is unspecified)
also installing the dependencies ‘sys’, ‘askpass’, ‘sp’, ‘curl’, ‘jsonlite’, ‘mime’, ‘openssl’, ‘RgoogleMaps’, ‘png’, ‘rjson’, ‘jpeg’, ‘httr’

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/sys_3.3.zip'
Content type 'application/zip' length 59825 bytes (58 KB)
downloaded 58 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/askpass_1.1.zip'
Content type 'application/zip' length 64688 bytes (63 KB)
downloaded 63 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/sp_1.4-1.zip'
Content type 'application/zip' length 1879032 bytes (1.8 MB)
downloaded 1.8 MB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/curl_4.3.zip'
Content type 'application/zip' length 4127840 bytes (3.9 MB)
downloaded 3.9 MB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/jsonlite_1.6.1.zip'
Content type 'application/zip' length 1165767 bytes (1.1 MB)
downloaded 1.1 MB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/mime_0.9.zip'
Content type 'application/zip' length 48395 bytes (47 KB)
downloaded 47 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/openssl_1.4.1.zip'
Content type 'application/zip' length 3971355 bytes (3.8 MB)
downloaded 3.8 MB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/RgoogleMaps_1.4.5.3.zip'
Content type 'application/zip' length 480273 bytes (469 KB)
downloaded 469 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/png_0.1-7.zip'
Content type 'application/zip' length 292789 bytes (285 KB)
downloaded 285 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/rjson_0.2.20.zip'
Content type 'application/zip' length 578301 bytes (564 KB)
downloaded 564 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/jpeg_0.1-8.1.zip'
Content type 'application/zip' length 230663 bytes (225 KB)
downloaded 225 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/httr_1.4.1.zip'
Content type 'application/zip' length 514122 bytes (502 KB)
downloaded 502 KB

trying URL 'https://mirrors.e-ducation.cn/CRAN/bin/windows/contrib/3.6/ggmap_3.0.0.zip'
Content type 'application/zip' length 4698279 bytes (4.5 MB)
downloaded 4.5 MB

package ‘sys’ successfully unpacked and MD5 sums checked
package ‘askpass’ successfully unpacked and MD5 sums checked
package ‘sp’ successfully unpacked and MD5 sums checked
package ‘curl’ successfully unpacked and MD5 sums checked
package ‘jsonlite’ successfully unpacked and MD5 sums checked
package ‘mime’ successfully unpacked and MD5 sums checked
package ‘openssl’ successfully unpacked and MD5 sums checked
package ‘RgoogleMaps’ successfully unpacked and MD5 sums checked
package ‘png’ successfully unpacked and MD5 sums checked
package ‘rjson’ successfully unpacked and MD5 sums checked
package ‘jpeg’ successfully unpacked and MD5 sums checked
package ‘httr’ successfully unpacked and MD5 sums checked
package ‘ggmap’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
        C:\Users\ASUS\AppData\Local\Temp\RtmpwfrSh6\downloaded_packages
> library(maps)
> library(ggmap)
Google's Terms of Service: https://cloud.google.com/maps-platform/terms/.
Please cite ggmap if you use it! See citation("ggmap") for details.
> chicago = get_map(location = "chicago", zoom=11)
Error: Google now requires an API key.
       See ?register_google for details.
> ?register_google
starting httpd help server ... done
> register_google(AIzaSyBNXP9Ot-aCHNZGXwvDD-13ZAaMAXFiSr4)
Error: unexpected symbol in "register_google(AIzaSyBNXP9Ot-aCHNZGXwvDD-13ZAaMAXFiSr4"
> register_google(key = "AIzaSyBNXP9Ot-aCHNZGXwvDD-13ZAaMAXFiSr4")
> chicago = get_map(location = "chicago", zoom=11)
Source : https://maps.googleapis.com/maps/api/staticmap?center=chicago&zoom=11&size=640x640&scale=2&maptype=terrain&language=en-EN&key=xxx-aCHNZGXwvDD-13ZAaMAXFiSr4
Error in aperm.default(map, c(2, 1, 3)) : 
  invalid first argument, must be an array
In addition: Warning message:
In get_googlemap(center = location, zoom = zoom, maptype = maptype,  :
  HTTP 400 Bad Request
> has_goog_key()
Error in has_goog_key() : could not find function "has_goog_key"
> has_google_key()
[1] TRUE
> chicago = get_map(location = "Chicago", zoom=11)
Source : https://maps.googleapis.com/maps/api/staticmap?center=Chicago&zoom=11&size=640x640&scale=2&maptype=terrain&language=en-EN&key=xxx-aCHNZGXwvDD-13ZAaMAXFiSr4
Error in aperm.default(map, c(2, 1, 3)) : 
  invalid first argument, must be an array
In addition: Warning message:
In get_googlemap(center = location, zoom = zoom, maptype = maptype,  :
  HTTP 400 Bad Request
> 
